  <!-- Main hero unit for a primary marketing message or call to action -->
  <div class="hero-unit">
    <h1>Welcome to ptah_simpleauth!</h1>
    <p>The simpleauth application uses Ptah, a modern web publishing framework.
      Ptah enables you to build web applications and web sites - very fast.  The
      best part is Ptah works like you expect.  It uses well-documented technologies.
      You can pick what features you want and leave behind the opinions which you disagree.
    </p>
    <p>The default login is <strong>admin</strong> and the
      password is <strong>12345</strong>
    </p>
    <p tal:condition="user is not None">
      <a class="btn primary large" href="/ptah-manage/">
	Goto Ptah Manage UI &raquo;
      </a>
    </p>
    <p tal:condition="user is None">
      <a class="btn primary large" href="/login.html">Login first &raquo;</a>
    </p>
  </div>
  
  <!-- Example row of columns -->
  <div class="row">
    <div class="span6">
      <h2>Models</h2>
      <p>This sample application comes with an example model, Link.
        You can add, edit and delete them in the Manage UI.  You
        can look on the filesystem in models.py to see the Link model.
      </p>
      <p><a class="btn" href="/ptah-manage/models/">View models &raquo;</a></p>
    </div>
    <div class="span5">
      <h2>Settings</h2>
      <p>You started Ptah with telling paster to serve a .ini file.
        You can use the same software with different settings and have
        a very different expereince.  Ptah and Pyramid both provide
        mechanisms to easily create your own settings attributes.  This
        way you can store application settings on filesystem instead of
        in a database where version control isnt practical.
      </p>
      <p><a class="btn" href="/ptah-manage/settings/">View settings &raquo;</a></p>
    </div>
    <div class="span5">
      <h2>Users</h2>
      <p>Ptah comes with a default user subsystem.  You can use it to
        create, edit, delete, suspend and activate users.  The user
        system is invoked in __init__.py of your application to create
        the default login/password for this application.
      </p>
      <p><a class="btn" href="/ptah-manage/crowd/">View users &raquo;</a></p>
    </div>
  </div>
  
  <hr>
  <div class="row">
    <div class="span6">
      <h2>SQL</h2>
      <p>Ptah uses SQLAlchemy for its ORM and SQL library.
        While the default is sqlite, Ptah will run on all
        modern databases including Mysql, Oracle, Postgresql, and
        Microsoft SQLServer.  There is an O'Reilly book on SQLAlchemy.
        No homebrewed SQL usage here.  Everything you learn you can be
        applied outside of Ptah.
      </p>
      
      <p><a class="btn" href="/ptah-manage/sqla/">View tables &raquo;</a></p>
    </div>
    <div class="span5">
      <h2>Fields</h2>
      <p>No modern web environment would make you build your own Field's
        from scratch.  We provide a set of Fields out-of-the-box and it
        is very easy to build new ones.  Soon we will provide ability to
        download additional Fields so you can share and re-use other
        people's work.
      </p>
      <p><a class="btn" href="/ptah-manage/fields/">View fields &raquo;</a></p>
    </div>
    
    <div class="span5">
      <h2>Much more</h2>
      <p>We have disabled quite a few Manage UI modules for the initial
        user experience.  We do not want to further side track you from
        your evaluation time you have with Ptah.  Once you feel Ptah is
        right for you.  Feel free to re-enable those modules in your
        .ini file.
      </p>
      <!--
          <p><a class="btn" href="#">View details &raquo;</a></p>
          -->
    </div>
